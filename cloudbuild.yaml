# cloudbuild.yaml (Example)
steps:
  # Build the WebAPI service
  - name: 'gcr.io/cloud-builders/docker'
    args: [
            'build',
            '-t', 'gcr.io/${PROJECT_ID}/webapi:${COMMIT_SHA}', # Replace with your desired image tag
            '-f', 'backend/code/Server/WebAPI/Dockerfile', # Correct Dockerfile path
            'backend/code'  # Correct build context directory
          ]
    id: 'Build WebAPI'

  # Build the Receiver service (if needed)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
            'build',
            '-t', 'gcr.io/${PROJECT_ID}/receiver:${COMMIT_SHA}', # Replace with your desired image tag
            '-f', 'backend/code/Server/ReceiverService/Dockerfile', # Correct Dockerfile path
            'backend/code'  # Correct build context directory
          ]
    id: 'Build Receiver'

  - name: 'eclipse-mosquitto'
    waitFor: ['-'] # Run in parallel with WebAPI build if desired

      # Push the WebAPI image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/webapi:${COMMIT_SHA}']
    waitFor: ['Build WebAPI'] # Ensure build is finished before pushing
    id: 'Push WebAPI'

    # Deploy WebAPI container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'webapi-service' # Choose a name for your Cloud Run service
      - '--image=gcr.io/${PROJECT_ID}/webapi:${COMMIT_SHA}'
      - '--region=us-central1' # Replace with your desired region
      - '--platform=managed'
      - '--port=8080' # Replace with the port your WebAPI listens on inside the container
      - '--allow-unauthenticated' # Add this if you want the API to be publicly accessible
      - '--project=${PROJECT_ID}'
    waitFor: ['Push WebAPI'] # Ensure image is pushed before deploying
    id: 'Deploy WebAPI'


# List the images to be pushed to Google Container Registry
images:
  - 'gcr.io/${PROJECT_ID}/webapi:${COMMIT_SHA}'
  - 'gcr.io/${PROJECT_ID}/receiver:${COMMIT_SHA}'
  - 'gcr.io/${PROJECT_ID}/mqtt:latest'

options:
  logging: CLOUD_LOGGING_ONLY # Optional: Set logging options
